# .NET Desktop

# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImageName: 'ubuntu-latest'

variables:  
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  snapversion: '1st snap version'
  imageName: food-app

steps:
- bash: echo "snap version is $(snapversion) "; pwd 
  displayName: 'output snap version'

- task: NodeTool@0
  inputs:
    versionSpec: '6.x'
    checkLatest: true

- task: CmdLine@2
  inputs:
    script: 'npm install'
    workingDirectory: ./FoodApp/food-app

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs: 
    command: restore

- task: DotNetCoreCLI@2
  displayName: 'Build $(buildConfiguration)'
  inputs:
    command: build
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Run Tests
  inputs: 
   command: test
   arguments: '--configuration $(buildConfiguration)'


- task: DotNetCoreCLI@2
  displayName: Publish Build
  inputs:
    command: publish
    publishWebProjects: false
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True
    
- task: Docker@2
  displayName: Login to Docker Repo
  inputs:
    command: login
    containerRegistry: FoodAppRegistry

  
- task: Docker@2
  displayName: Building Docker Image
  inputs: 
    containerRegistry: FoodAppRegistry
    repository: $(imageName)
    command: build
    Dockerfile: Dockerfile
    tags: pipeline
   
- task: Docker@2
  displayName: Push Docker Image
  inputs: 
    containerRegistry: FoodAppRegistry
    repository: $(imageName)
    command: push
    tags: pipeline

- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'snapGame'
        